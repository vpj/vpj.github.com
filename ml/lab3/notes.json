{"lab/logger/__init__.py":[{"pre":["        _internal = _LoggerInternal()","","    return _internal","",""],"post":["","","def log_color(parts: typing.List[typing.Union[str, typing.Tuple[str, ANSICode]]], *,","              new_line=True):","    \"\"\""],"code":["def log(message, *,","        color: typing.List[ANSICode] or ANSICode or None = None,","        new_line=True):","    internal().log(message, color=color, new_line=new_line)"],"note":"#### Print a message to the console","collapsed":false,"codeCollapsed":false},{"pre":["        color: typing.List[ANSICode] or ANSICode or None = None,","        new_line=True):","    internal().log(message, color=color, new_line=new_line)","",""],"post":["","","def add_indicator(name: str,","                  type_: IndicatorType = IndicatorType.scalar,","                  options: IndicatorOptions = None):"],"code":["def log_color(parts: typing.List[typing.Union[str, typing.Tuple[str, ANSICode]]], *,","              new_line=True):","    internal().log_color(parts, new_line=new_line)"],"note":"#### Print a multi-coloured message to the console","collapsed":false,"codeCollapsed":false},{"pre":["def log_color(parts: typing.List[typing.Union[str, typing.Tuple[str, ANSICode]]], *,","              new_line=True):","    internal().log_color(parts, new_line=new_line)","",""],"post":["","","def store(*args, **kwargs):","    \"\"\"","    ### Stores a value in the logger."],"code":["def add_indicator(name: str,","                  type_: IndicatorType = IndicatorType.scalar,","                  options: IndicatorOptions = None):","    internal().add_indicator(name, type_, options)"],"note":"#### Setup a log indicator","collapsed":false,"codeCollapsed":false}]}